Arrary paractice problems

Example: https://neetcode.io/problems/spiral-matrix Spiral Matrix
Code:
  class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        res = []
        left,right= 0, len(matrix[0])
        top,bottom= 0, len(matrix)

        while left<right and top<bottom:
            # the first row, from left to right
            for i in range(left,right):
                res.append(matrix[top][i])
            top+=1
            
            # the last coloum, from top to bottom
            for i in range(top, bottom):
                res.append(matrix[i][right-1])
            right-=1

            if not (left<right and top<bottom):
                break
            
            # the last row, from right to left
            for i in range(right-1,left-1,-1):
                res.append(matrix[bottom-1][i])
            bottom-=1
            
            # the first coloum, from right to left
            for i in range(bottom-1,top-1,-1):
                res.append(matrix[i][left])
            left+=1

        return res

Example 2: https://leetcode.com/problems/spiral-matrix-ii/description/ piral Matrix II
Code:
class Solution:
    def generateMatrix(self, n: int) -> List[List[int]]:
        left,right= 0, n
        top,bottom=0,n
        ans=[[0]*n for _ in range(n)]  # To initial the ans matrix
        val= 1
        
        while left<right:
            # add the top row from left to right
            for i in range(left,right):
                ans[top][i]=val
                val+=1
            top+=1

            # add the last coloum from top to bottom
            for i in range(top,bottom):
                ans[i][right-1]=val
                val+=1
            right-=1

            # add the last row from right to left
            for i in range(right-1,left-1,-1):
                ans[bottom-1][i]=val
                val+=1
            bottom-=1

            # add the first coloum from bottom to top
            for i in range(bottom-1,top-1,-1):
                ans[i][left]=val
                val+=1
            left+=1
        return ans





        
